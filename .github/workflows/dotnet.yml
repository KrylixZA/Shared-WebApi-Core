name: .NET

on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'

env:
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    MAJOR_VERSION: 1
    MINOR_VERSION: 0
    PATCH_VERSION: 0

name: $MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION.$GITHUB_RUN_NUMBER

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: dotnet restore ./src
    - name: Build
      run: dotnet build ./src --no-restore --configuration "Release"
    - name: Test
      run: dotnet test ./src --no-build --no-build --configuration "Release"
    - name: Run SonarQube Scan
      uses: highbyte/sonarscan-dotnet@1.0.2
      with:
        sonarProjectKey: Shared-WebApi-Core
        sonarProjectName:  Shared-WebApi-Core
        sonarOrganization: krylixza
        dotnetBuildArguments: ./src
        dotnetTestArguments: ./src --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
