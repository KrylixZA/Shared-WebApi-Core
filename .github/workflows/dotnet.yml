name: .NET

on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'

env:
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    BRANCH_NAME: ${GITHUB_REF#refs/heads/}
    MAJOR_VERSION: 1
    MINOR_VERSION: 0
    PATCH_VERSION: 0
    BUILD_VERSION: $MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION.${GITHUB_RUN_NUMBER}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Define build number
      id: define_build_number
      run: |
        buildNumber=$(echo ${{ env.BUILD_VERSION }})
        branchName=$(echo ${{ env.BRANCH_NAME }} | sed 's:.*/::')
        if [[ "$branchName" == "master" ]]; then
          $branchName = ""
        fi
        buildId=$buildNumber-$branchName
        echo $buildNumber
        echo $branchName
        echo $buildId
        echo "##[set-output name=BUILD_NUMBER;]$(echo $buildId)"

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore dependencies
      run: dotnet restore $GITHUB_WORKSPACE/src

    - name: Build
      run: dotnet build $GITHUB_WORKSPACE/src --no-restore --configuration "Release" /p:Version=${{ steps.define_build_number.outputs.BUILD_NUMBER }}

    - name: Test
      run: dotnet test $GITHUB_WORKSPACE/src --no-build --no-restore --configuration "Release"

    # - name: Pack
    #   run: dotnet pack $GITHUB_WORKSPACE/src --no-build --no-restore --configuration "Release" /p:NuspecFile=$GITHUB_WORKSPACE/build/Shared.WebApi.Core.nuspec /p:NuspecBasePath=$GITHUB_WORKSPACE/src /p:Version=${{ steps.define_build_number.outputs.BUILD_NUMBER }} /p:PackageVersion=${{ steps.define_build_number.outputs.BUILD_NUMBER }}

    - name: Pack
      run: nuget pack **/*.nuspec -BasePath $GITHUB_WORKSPACE/src -Version ${{ steps.define_build_number.outputs.BUILD_NUMBER }} -properties Configuration=Release

    - name: Push
      run:  dotnet nuget push "$GITHUB_WORKSPACE/build/Shared.WebApi.Core.*.nupkg" --source "https://nuget.pkg.github.com/krylixza/index.json" --skip-duplicate --api-key $GITHUB_TOKEN

    - name: Run SonarQube Scan
      uses: highbyte/sonarscan-dotnet@1.0.2
      with:
        sonarProjectKey: Shared-WebApi-Core
        sonarProjectName:  Shared-WebApi-Core
        sonarOrganization: krylixza
        dotnetBuildArguments: ./src
        dotnetTestArguments: ./src --logger trx --output "../TestResults/" -p:CollectCoverage=true -p:CoverletOutputFormat="json%2copencover" -p:CoverletOutput="../TestResults/" -p:MergeWith="../TestResults/coverage.json"
        sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
